# This workflow will build sdist & bdist of Python Package using manylinux container and
# upload them to PyPI using Twine when a release is created

name: PyPI Publish

on:
  workflow_dispatch:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  container-build-dist:
    runs-on: ubuntu-latest
    container:
      image: quay.io/pypa/manylinux_2_28_x86_64
      options: --user root
      env:
        PLAT: manylinux_2_28_x86_64
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      volumes:
      - /home/runner/work/cherab_phix/cherab_phix:/io

    steps:
    - name: check out repo
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        lfs: true

    - name: Build üêç distribution üì¶ in docker with CPython3.8
      run: |
        cd /io
        /opt/python/cp38-cp38/bin/python -m pip install build --user
        /opt/python/cp38-cp38/bin/python -m build
        auditwheel repair dist/*cp38-cp38-linux_x86_64.whl --plat ${PLAT}

    - name: Build üêç distribution üì¶ in docker with CPython3.9
      run: |
        cd /io
        /opt/python/cp39-cp39/bin/python -m pip install build --user
        /opt/python/cp39-cp39/bin/python -m build
        auditwheel repair dist/*cp39-cp39-linux_x86_64.whl --plat ${PLAT}

    - name: Check README rendering for PyPI
      run: |
        cd /io
        /opt/python/cp39-cp39/bin/python -m pip install twine --user
        /opt/python/cp39-cp39/bin/twine check dist/*

    - name: Publish üêç distribution üì¶ to PyPI
      run: |
        cd /io
        /opt/python/cp39-cp39/bin/twine upload dist/*-tar.gz
        /opt/python/cp39-cp39/bin/twine upload wheelhouse/*-manylinux*.whl
